import board
import busio as io
from digitalio import DigitalInOut, Direction
import adafruit_ht16k33.segments
import time

# Initialize variables
timer = 30
active = 1

# assigning board function
i2c = io.I2C(board.SCL, board.SDA)
active_flag = DigitalInOut(board.D1)
start_flag1 = DigitalInOut(board.D3)
start_flag2 = DigitalInOut(board.D4)

# active flag for countdown state
active_flag.direction = Direction.OUTPUT

# start flags for timer value & start
# 01 = start @ 30 secs
# 10 = start @ 60 secs
# 11 = start @ 90 secs
# 00 = stop

start_flag1.direction = Direction.INPUT
start_flag2.direction = Direction.INPUT

# Lock the I2C device before we try to scan
while not i2c.try_lock():
    pass
# Print the addresses found once
print("I2C addresses found:", [hex(device_address)
                               for device_address in i2c.scan()])

# Unlock I2C now that we're done scanning.
i2c.unlock()

print("i2c complete")
t_display = adafruit_ht16k33.segments.Seg14x4(i2c, address=0x72)

# Defining software functions

def timer_start():
    t_display.print('5BDL')
    t_display.show()
    time.sleep(2)

    t_display.print('    ')
    t_display.print('RDY')
    t_display.show()
    time.sleep(1.5)
    t_display.print('    ')
    t_display.print('SET')
    time.sleep(1.5)
    t_display.print('    ')
    t_display.print('GO')
    time.sleep(.5)

# run once
# timer_start()
t_display.print('5BDL')
t_display.show()

# fstart1 = False
# fstart2 = False
fstart = 0

# main loop
while True:
    fstart1 = start_flag1.value
    fstart2 = start_flag2.value
    if fstart1 == False and fstart2 == False:
        fstart = 0
    elif fstart1 == False and fstart2 == True:
        fstart = 1
        timer = 30
        print("timer is %d" % timer)
    elif fstart1 == True and fstart2 == False:
        fstart = 1
        timer = 60
        print("timer is %d" % timer)
    elif fstart1 == True and fstart2 == True:
        fstart = 1
        timer = 90
        print("timer is %d" % timer)
    while fstart == 1:
        print("fstart loop")
        timer_start()
        while active == 1:
            active_flag.value = True
            t_display.print(timer)
            t_display.show()
            time.sleep(1)
            timer = timer - 1
            if timer == -1:
                active_flag.value = False
                t_display.print('TIME')
                t_display.show()
                active = 0
